@page "/inventory"
@using BusinessTracking.Models
@using System.Net.Http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using BusinessTracking.Services
@inject BusinessTracking.Services.DatabaseService DatabaseService

<div class="container-fluid bottom-section">
    <div class="row">
        <div class="col-12 p-5 mb-4 bg-light rounded-3">
            <div class="container-fluid py-5">
                <h1 class="display-5 fw-bold">Inventory Management</h1>
                <p class="fs-4">Add new items and manage existing inventory</p>
            </div>
        </div>
    </div>

    <div class="row justify-content-center bottom-section">
        <div class="col-md-10">
            <div class="mb-3 bg-white p-4 rounded-3 shadow-sm">
                <h4>Add New Item</h4>
                <input @bind="newItem.Name" placeholder="Name" class="form-control mb-2" />
                <input type="number" @bind="newItem.Quantity" placeholder="Quantity" class="form-control mb-2" />
                <input type="number" @bind="newItem.Price" placeholder="Price" class="form-control mb-2" />
                <button class="btn btn-primary" @onclick="() => ButtonClickEvent(newItem)">Save</button>
            </div>
        </div>
    </div>

    <div class="row justify-content-center bottom-section bottom-section">
        <div class="col-md-10">
            @if (inventoryItems != null && inventoryItems.Any())
            {
                <div class="table-responsive bg-white p-4 rounded-3 shadow-sm">
                    <table class="table">
                        <thead class="table-light">
                            <tr>
                                <th>Item ID</th>
                                <th>Name</th>
                                <th>Quantity</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in inventoryItems)
                            {
                                <tr>
                                    <td>@item.Id</td>
                                    <td>@item.Name</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.Price</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="p-4 bg-white rounded-3 shadow-sm bottom-section">
                    <p>No items found.</p>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<InventoryItem> inventoryItems = new List<InventoryItem>();
    private InventoryItem newItem = new InventoryItem();

    protected override async Task OnInitializedAsync()
    {
        inventoryItems = await DatabaseService.FetchInventory<InventoryItem>();
    }

    protected async Task ButtonClickEvent(InventoryItem newItem)
    {
        await DatabaseService.CreateInventory<InventoryItem>(newItem);
        // Refresh the inventory list after adding a new item
        inventoryItems = await DatabaseService.FetchInventory<InventoryItem>();
    }
}

<style>
    /* Custom styles for bottom section */
    .bottom-section {
        background-color: #606C38;
        border-radius: 10px; /* Adjust border-radius to control the roundness of the corners */
        padding: 20px; /* Adjust padding as needed */
    }

    /* Override table background to ensure visibility */
    .bottom-section table {
        background-color: transparent;
    }

    /* Override table text color to ensure visibility */
    .bottom-section table tr td {
        color: white;
    }
</style>
